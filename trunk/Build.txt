Build file for BBWin
==============================================================

This file explains you how to build BBWin from the sources.


Getting the last sources 
========================

BBWin is developped in C++ (the Standard Template Library and the Standard C++ Library
are used)
The source of BBWin are available from the sourceforge subversion
repository for the BBWin projects :
http://svn.sourceforge.net/viewcvs.cgi/bbwin/


Install the tools
=================

BBWin has been developped thanks to many tools. You should install them to 
build BBWin easily without troubles.

Visual C++ Express 2010
http://www.microsoft.com/express/Downloads/

Windows Platform SDK 2003
You can download it for free from microsoft website :
http://www.microsoft.com/downloads/details.aspx?FamilyId=A55B6B43-E24F-4EA3-A93E-40C0EC4F68E5&displaylang=en

Wix Toolkit : this package is used to build the BBWin MSI installer
You should install it and have the bin directory in your current path
http://sourceforge.net/projects/wix/

TinyXML : BBWin used the excellent TinyXML library for the configuration loading XML.
You do not need to install it. TinyXML sources are included in BBWin sources.

Boost Lib : These C++ libraries are used for some agents and will be
certainly used in the BBWin core service in the future.
You can download binaries from:
http://www.boostpro.com/download/
Once installed, add a environment variable BoostInstallDir pointing to the boost install directory.
Example:
BoostInstallDir=C:\Program Files (x86)\boost\boost_1_44


Building the BBWin with Visual C++ Express 2010
===============================================

Open the BBWin.sln file at the top directory of the project
First, you should prepare your Visual C++ configuration by adding
in the default bin, include and lib directories the different directories from :

- the platform SDK
- the boost libraries

Then just build the solution.

Building process order
======================

1) BBWin core service
2) Agents
3) Externals (needing compilation)


